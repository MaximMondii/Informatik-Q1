#BlueJ class context
comment0.target=Photo
comment1.params=orientation\ tags
comment1.target=Photo(char,\ java.lang.String[])
comment10.params=tags
comment10.target=void\ setTags(java.lang.String[])
comment11.params=photo
comment11.target=int\ compareTo(Photo)
comment12.params=tag
comment12.target=boolean\ hasTag(java.lang.String)
comment13.params=
comment13.target=java.lang.String\ toString()
comment14.params=nextPhoto
comment14.target=int\ getInterestFactor(Photo)
comment15.params=filename
comment15.target=java.util.ArrayList\ getPhotosFrom(java.lang.String)
comment16.params=filename\ list
comment16.target=void\ writePhotosToFile(java.lang.String,\ java.util.ArrayList)
comment16.text=\r\n\ Diese\ Methode\ ist\ optimiert\ daf\u00FCr\ eine\ Datei\ mit\ den\ gew\u00E4hlten\ Slides\ zu\ schreiben\r\n\ Falls\ es\ schon\ eine\ Datei\ mit\ dem\ \u00FCbergebenen\ Namen\ gibt,\ wird\ diese\ gel\u00F6scht\r\n\ @param\ filename\r\n\ @param\ list\r\n
comment17.params=str\ list
comment17.target=boolean\ containsEqualCase(java.lang.String,\ java.util.ArrayList)
comment2.params=line
comment2.target=Photo(java.lang.String)
comment3.params=
comment3.target=char\ getOrientation()
comment4.params=orientation
comment4.target=void\ setOrientation(char)
comment5.params=
comment5.target=int\ getNumberTags()
comment6.params=numberTags
comment6.target=void\ setNumberTags(int)
comment7.params=
comment7.target=int\ getId()
comment8.params=id
comment8.target=void\ setId(int)
comment9.params=
comment9.target=java.lang.String[]\ getTags()
numComments=18
